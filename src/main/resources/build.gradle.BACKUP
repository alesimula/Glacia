buildscript {
    ext.kotlin_version = '1.3.40'
    ext.forgelin_version = '1.8.3'

    repositories {
        google()
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
        //classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0'
group = 'com.greenapple.glacia' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Glacia'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

/*configurations {
    shade
    compile.extendsFrom shade
}*/

/*reobf {
    jar {}
    shadowJar{dependsOn reobfJar}
}
tasks.reobfShadowJar.mustRunAfter shadowJar
tasks.build.dependsOn reobfShadowJar*/

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

project.tasks.build.dependsOn project.tasks.shadowJar
reobf {
    jar{}
}
project.tasks.reobfJar.mustRunAfter shadowJar
shadowJar {
    mustRunAfter jar
    String embeddedPackage = "${project.group}.embedded"
    classifier ''
    //baseName = "$archivesBaseName-packedKotlin"
    version = "$project.version"

    mergeServiceFiles()
    dependencies {
        include(dependency('org.jetbrains.kotlin:.*'))
        relocate 'kotlin', "${embeddedPackage}.kotlin"
    }
    //classifier ''
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20190721-1.14.4'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
    // Kotlin shading
    //srgExtra "PK: kotlin com/example/examplemod/repack/kotlin"
}

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {
        url {
            "http://maven.shadowfacts.net/"
        }
    }
    maven {url 'http://dogforce-games.com/maven'}
}

configurations {
    // configuration that holds jars to embed inside the jar
    embed
    embed.transitive = false
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.14.3-27.0.59'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //compile group: "net.shadowfacts", name: "Forgelin", version: "$forgelin_version"
    compile "gigaherz.graph:GraphLib2:2.0.0"
    embed "gigaherz.graph:GraphLib2:2.0.0"
    embed "net.shadowfacts:Forgelin:$forgelin_version"
    embed "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    embed "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //compile group: "net.shadowfacts", name: "Forgelin", version: "$forgelin_version"

    //shade "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //shade "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    // Shading
    /*configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }*/
    //exclude "**"
    into('/META-INF/libraries') {
        from configurations.embed
    }

    manifest {
        attributes([
                "ContainedDeps": configurations.embed.collect { it.getName() }.join(' '),
                "Maven-Artifact":"${project.group}:${project.archivesBaseName}:${project.version}",
                'Timestamp': System.currentTimeMillis()
        ])
    }
}

//tasks.reobfShadowJar.mustRunAfter shadowJar

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url = "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

processResources {
    minecraft {
        //srgExtra "PK: com.sun.speech.freetts com.mrgreaper.twisted.lib"
    }
}